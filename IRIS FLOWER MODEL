import numpy as np
import pandas as pd
from sklearn.linear_model import LogisticRegression
import joblib
from sklearn.model_selection import train_test_split

import matplotlib.pyplot as plt

data = {
    'sepal_length':[5.1, 4.9, 4.7, 4.6, 5.0, 5.4, 4.6, 5.0, 4.4, 4.9, 7.0, 6.4, 6.9, 5.5, 6.5, 5.7, 6.3, 4.9, 6.6, 5.2],
    'sepal_width':[3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.2, 3.2, 3.1, 2.3, 2.8, 2.8, 3.3, 2.4, 2.9, 2.7],
    'petal_length':[1.4, 1.4, 1.3, 1.5, 1.4, 1.7, 1.4, 1.5, 1.4, 1.5, 4.7, 4.5, 4.9, 4.0, 4.6, 4.5, 4.7, 3.3, 4.6, 3.9],
    'petal_width':[0.2, 0.2, 0.2, 0.2, 0.4, 0.4, 0.3, 0.2, 0.2, 0.1, 1.4, 1.5, 1.5, 1.3, 1.5, 1.3, 1.6, 1.0, 1.3, 1.4],
    'species':['setosa', 'setosa', 'setosa', 'setosa', 'setosa', 'setosa', 'setosa', 'setosa', 'setosa', 'setosa',
               'versicolor', 'versicolor', 'versicolor', 'versicolor', 'versicolor', 'versicolor', 'versicolor', 'versicolor', 'versicolor', 'versicolor']
}
df=pd.DataFrame(data)
X = df[['sepal_length', 'sepal_width', 'petal_length', 'petal_width']] # features
y = df['species'] # target
# split data into training and testing sets
X_train ,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)
model=LogisticRegression()
model.fit(X_train,y_train) # model training
sl=float(input("Enter sepal length: "))
sw=float(input("Enter sepal width: "))
pl=float(input("Enter petal length: "))
pw=float(input("Enter petal width: "))
new_data=pd.DataFrame([[sl,sw,pl,pw]], columns=['sepal_length', 'sepal_width', 'petal_length', 'petal_width'])
prediction=model.predict(new_data)
accuracy=model.score(X_test,y_test)
print("Accuracy:",accuracy)
print("Predicted species:",prediction[0])
plt.scatter(df['sepal_length'],df['sepal_width'],c=df['species'].map({'setosa':0,'versicolor':1}))
plt.xlabel('sepal_length')
plt.ylabel('sepal_width')
plt.title('Scatter Plot of Sepal Length vs Sepal Width')
plt.show()


joblib.dump(model,'iris_model.pkl') # model saving
