import numpy as np
import pandas as pd
from sklearn.linear_model import LogisticRegression
import joblib
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

import matplotlib.pyplot as plt

# Load the dataset from the uploaded CSV file
df = pd.read_csv('/content/Iris.csv')

# Use correct column names from the CSV file
X = df[['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']] # features
y = df['Species'] # target

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=31)

# Initialize and train the model
model = LogisticRegression(max_iter=200) # Increased max_iter to avoid convergence warning
model.fit(X_train, y_train) # model training

# Make predictions on the test set
y_pred = model.predict(X_test)

# Calculate the accuracy



# Get input from the user
sl = float(input("Enter sepal length: "))
sw = float(input("Enter sepal width: "))
pl = float(input("Enter petal length: "))
pw = float(input("Enter petal width: "))

# Create a DataFrame for the new data with correct column names
new_data = pd.DataFrame([[sl, sw, pl, pw]], columns=['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm'])

# Make a prediction for the new data
prediction = model.predict(new_data)
print("Predicted species for new data:", prediction[0])
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy on the test set: {accuracy:.2f}")
# Create a mapping for all unique species for plotting
species_mapping = {species: i for i, species in enumerate(df['Species'].unique())}
colors = df['Species'].map(species_mapping)

# Plot the data
plt.scatter(df['SepalLengthCm'], df['SepalWidthCm'], c=colors)
plt.xlabel('Sepal Length (Cm)')
plt.ylabel('Sepal Width (Cm)')
plt.title('Scatter Plot of Sepal Length vs Sepal Width by Species')
plt.show()


# Save the model
joblib.dump(model, 'iris_model.pkl') # model saving
